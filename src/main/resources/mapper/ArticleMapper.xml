<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gameForum.mapper.ArticleMapper">
    <resultMap id="baseMap" type="com.gameForum.entity.ArticleDto">
    </resultMap>

    <select id="selectArticleByTitle" resultType="com.gameForum.entity.ArticleDto" resultMap="baseMap">
        SELECT article.*,a.name as game_name,user.user_name,c.type_name,d.comments,
                if(isnull(b.id),false,true) as flag
            FROM article
            LEFT JOIN (SELECT id,name FROM game where deleted = 0) a ON article.game_id=a.id
            LEFT JOIN (SELECT id,name as user_name FROM user where deleted = 0) user on article.user_id = user.id
            LEFT JOIN (SELECT id,type_name FROM article_type where deleted = 0) c ON article.article_type_id = c.id
            LEFT JOIN (SELECT article_id,count(*) as comments FROM comment where deleted = 0 GROUP BY article_id) d ON article.id=d.article_id
            left JOIN (SELECT article_id,id FROM like_record WHERE user_id = #{userId} AND deleted = 0) b on b.article_id = article.id
            WHERE article.title like #{title} and deleted=0 order by article.is_top Desc,article.update_time Desc limit #{pageNo},#{pageSize};
    </select>
    <select id="selectArticleByGame" resultType="com.gameForum.entity.ArticleDto" resultMap="baseMap">
        SELECT article.*,a.name as game_name,user.user_name,c.type_name,d.comments,
            if(isnull(b.id),false,true) as flag
            FROM article
            LEFT JOIN (SELECT id,name FROM game where deleted = 0) a ON article.game_id=a.id
            LEFT JOIN (SELECT id,name as user_name FROM user where deleted = 0) user on article.user_id = user.id
            LEFT JOIN (SELECT id,type_name FROM article_type where deleted = 0) c ON article.article_type_id = c.id
            LEFT JOIN (SELECT article_id,count(*) as comments FROM comment where deleted = 0 GROUP BY article_id) d ON article.id=d.article_id
            left JOIN (SELECT article_id,id FROM like_record WHERE user_id = #{userId} AND deleted = 0) b on b.article_id = article.id
            WHERE article.game_id = #{gameId}
        <if test="articleTypeId!=0">
            and article_type_id = #{articleTypeId}
        </if>
              and deleted=0 order by article.is_top Desc,article.update_time Desc limit #{pageNo},#{pageSize};
    </select>
    <select id="selectArticleById" resultType="com.gameForum.entity.ArticleDto" resultMap="baseMap">
        SELECT article.*,a.name as game_name,user.user_name,c.type_name,d.comments,
            if(isnull(b.id),false,true) as flag
            FROM article
            LEFT JOIN (SELECT id,name FROM game where deleted = 0) a ON article.game_id=a.id
            LEFT JOIN (SELECT id,name as user_name FROM user where deleted = 0) user on article.user_id = user.id
            LEFT JOIN (SELECT id,type_name FROM article_type where deleted = 0) c ON article.article_type_id = c.id
            LEFT JOIN (SELECT article_id,count(*) as comments FROM comment where deleted = 0 GROUP BY article_id) d ON article.id=d.article_id
            left JOIN (SELECT article_id,id FROM like_record WHERE user_id = #{userId} AND deleted = 0) b on b.article_id = article.id
            WHERE article.id= #{id} and deleted=0;
    </select>
    <select id="selectArticleByUser" resultType="com.gameForum.entity.UserDto" resultMap="baseMap">
        SELECT article.*,a.name as game_name,user.user_name,c.type_name,d.comments,
        if(isnull(b.id),false,true) as flag
        FROM article
        LEFT JOIN (SELECT id,name FROM game where deleted = 0) a ON article.game_id=a.id
        LEFT JOIN (SELECT id,name as user_name FROM user where deleted = 0) user on article.user_id = user.id
        LEFT JOIN (SELECT id,type_name FROM article_type where deleted = 0) c ON article.article_type_id = c.id
        LEFT JOIN (SELECT article_id,count(*) as comments FROM comment where deleted = 0 GROUP BY article_id) d ON article.id=d.article_id
        left JOIN (SELECT article_id,id FROM like_record WHERE user_id = #{userId} AND deleted = 0) b on b.article_id = article.id
        WHERE article.user_id= #{byUserId} and deleted=0 order by article.update_time Desc
        <if test="pageSize!=-1">
            Limit #{pageNo},#{pageSize}
        </if>
    </select>

</mapper>
